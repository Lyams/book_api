name: CI

on:
  - push
  - pull_request

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ruby:
          - '3.1'
    runs-on: ${{ matrix.os }}
    services:
      # if you need redis
      # redis:
      #   image: redis
      #   ports:
      #   - 6379:6379
      #   options: --entrypoint redis-server
      postgres:
        image: postgres:12
        ports: [ '5432:5432' ]
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:@localhost:5432/test
      RAILS_ENV: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          cp config/database.ci.yml config/database.yml
          rake db:create db:migrate
      - name: Run tests
        env:
          PGHOST: localhost
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
        run: |
          bundle exec rails spec